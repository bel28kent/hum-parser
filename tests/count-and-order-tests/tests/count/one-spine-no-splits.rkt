#lang racket/base

(require "../../../../parser/data-definitions/data-definitions.rkt"
         "../../../../parser/functions/file.rkt"
         "../../../../parser/functions/spine-parser.rkt"
         "../../../../parser/data-structures/humdrum-graph/data-definitions/data-definitions.rkt"
         "../../../../parser/data-structures/humdrum-graph/functions/hgraph-to-hfile.rkt"
         "../../../../parser/data-structures/humdrum-graph/functions/hfile-to-hgraph.rkt"
         "../../../../parser/data-structures/linked-spine/functions/gspines-to-linked-spines.rkt"
         test-engine/racket-tests)

(check-expect (path->hfile "../../data/count/one-spine-no-splits.krn")
              (hfile (list (record "**kern" TOKEN (list (token "**kern" EXCLUSIVE-INTERPRETATION 0 0)) 0)
                           (record "*clefG2" TOKEN (list (token "*clefG2" CLEF 1 0)) 1)
                           (record "*k[]" TOKEN (list (token "*k[]" KEY-SIG 2 0)) 2)
                           (record "*a:" TOKEN (list (token "*a:" KEY-LABEL 3 0)) 3)
                           (record "*M3/4" TOKEN (list (token "*M3/4" TIME-SIG 4 0)) 4)
                           (record "4c" TOKEN (list (token "4c" SPINE-DATA 5 0)) 5)
                           (record "4c" TOKEN (list (token "4c" SPINE-DATA 6 0)) 6)
                           (record "4c" TOKEN (list (token "4c" SPINE-DATA 7 0)) 7)
                           (record "=2" TOKEN (list (token "=2" MEASURE 8 0)) 8)
                           (record "4c" TOKEN (list (token "4c" SPINE-DATA 9 0)) 9)
                           (record "4c" TOKEN (list (token "4c" SPINE-DATA 10 0)) 10)
                           (record "4c" TOKEN (list (token "4c" SPINE-DATA 11 0)) 11)
                           (record "=3" TOKEN (list (token "=3" MEASURE 12 0)) 12)
                           (record "4c" TOKEN (list (token "4c" SPINE-DATA 13 0)) 13)
                           (record "4c" TOKEN (list (token "4c" SPINE-DATA 14 0)) 14)
                           (record "4c" TOKEN (list (token "4c" SPINE-DATA 15 0)) 15)
                           (record "==" TOKEN (list (token "==" MEASURE 16 0)) 16)
                           (record "*-" TOKEN (list (token "*-" SPINE-TERMINATOR 17 0)) 17))))
(check-expect (spine-parser (path->hfile "../../data/count/one-spine-no-splits.krn"))
              (list (global-spine KERN
                                  (list (list (token "**kern" EXCLUSIVE-INTERPRETATION 0 0))
                                        (list (token "*clefG2" CLEF 1 0))
                                        (list (token "*k[]" KEY-SIG 2 0))
                                        (list (token "*a:" KEY-LABEL 3 0))
                                        (list (token "*M3/4" TIME-SIG 4 0))
                                        (list (token "4c" SPINE-DATA 5 0))
                                        (list (token "4c" SPINE-DATA 6 0))
                                        (list (token "4c" SPINE-DATA 7 0))
                                        (list (token "=2" MEASURE 8 0))
                                        (list (token "4c" SPINE-DATA 9 0))
                                        (list (token "4c" SPINE-DATA 10 0))
                                        (list (token "4c" SPINE-DATA 11 0))
                                        (list (token "=3" MEASURE 12 0))
                                        (list (token "4c" SPINE-DATA 13 0))
                                        (list (token "4c" SPINE-DATA 14 0))
                                        (list (token "4c" SPINE-DATA 15 0))
                                        (list (token "==" MEASURE 16 0))
                                        (list (token "*-" SPINE-TERMINATOR 17 0)))
                                  0)))
(check-expect (hgraph->hfile (hgraph
                              (root (list (list (leaf (token "**kern" EXCLUSIVE-INTERPRETATION 0 0))
                                                (leaf (token "*clefG2" CLEF 1 0))
                                                (leaf (token "*k[]" KEY-SIG 2 0))
                                                (leaf (token "*a:" KEY-LABEL 3 0))
                                                (leaf (token "*M3/4" TIME-SIG 4 0))
                                                (leaf (token "4c" SPINE-DATA 5 0))
                                                (leaf (token "4c" SPINE-DATA 6 0))
                                                (leaf (token "4c" SPINE-DATA 7 0))
                                                (leaf (token "=2" MEASURE 8 0))
                                                (leaf (token "4c" SPINE-DATA 9 0))
                                                (leaf (token "4c" SPINE-DATA 10 0))
                                                (leaf (token "4c" SPINE-DATA 11 0))
                                                (leaf (token "=3" MEASURE 12 0))
                                                (leaf (token "4c" SPINE-DATA 13 0))
                                                (leaf (token "4c" SPINE-DATA 14 0))
                                                (leaf (token "4c" SPINE-DATA 15 0))
                                                (leaf (token "==" MEASURE 16 0))
                                                (leaf (token "*-" SPINE-TERMINATOR 17 0)))))))
              (path->hfile "../../data/count/one-spine-no-splits.krn"))
(check-expect (lolot->lor (list (list (token "**kern" EXCLUSIVE-INTERPRETATION 0 0))
                                (list (token "*clefG2" CLEF 1 0))
                                (list (token "*k[]" KEY-SIG 2 0))
                                (list (token "*a:" KEY-LABEL 3 0))
                                (list (token "*M3/4" TIME-SIG 4 0))
                                (list (token "4c" SPINE-DATA 5 0))
                                (list (token "4c" SPINE-DATA 6 0))
                                (list (token "4c" SPINE-DATA 7 0))
                                (list (token "=2" MEASURE 8 0))
                                (list (token "4c" SPINE-DATA 9 0))
                                (list (token "4c" SPINE-DATA 10 0))
                                (list (token "4c" SPINE-DATA 11 0))
                                (list (token "=3" MEASURE 12 0))
                                (list (token "4c" SPINE-DATA 13 0))
                                (list (token "4c" SPINE-DATA 14 0))
                                (list (token "4c" SPINE-DATA 15 0))
                                (list (token "==" MEASURE 16 0))
                                (list (token "*-" SPINE-TERMINATOR 17 0))))
              (list (record "**kern" TOKEN (list (token "**kern" EXCLUSIVE-INTERPRETATION 0 0)) 0)
                    (record "*clefG2" TOKEN (list (token "*clefG2" CLEF 1 0)) 1)
                    (record "*k[]" TOKEN (list (token "*k[]" KEY-SIG 2 0)) 2)
                    (record "*a:" TOKEN (list (token "*a:" KEY-LABEL 3 0)) 3)
                    (record "*M3/4" TOKEN (list (token "*M3/4" TIME-SIG 4 0)) 4)
                    (record "4c" TOKEN (list (token "4c" SPINE-DATA 5 0)) 5)
                    (record "4c" TOKEN (list (token "4c" SPINE-DATA 6 0)) 6)
                    (record "4c" TOKEN (list (token "4c" SPINE-DATA 7 0)) 7)
                    (record "=2" TOKEN (list (token "=2" MEASURE 8 0)) 8)
                    (record "4c" TOKEN (list (token "4c" SPINE-DATA 9 0)) 9)
                    (record "4c" TOKEN (list (token "4c" SPINE-DATA 10 0)) 10)
                    (record "4c" TOKEN (list (token "4c" SPINE-DATA 11 0)) 11)
                    (record "=3" TOKEN (list (token "=3" MEASURE 12 0)) 12)
                    (record "4c" TOKEN (list (token "4c" SPINE-DATA 13 0)) 13)
                    (record "4c" TOKEN (list (token "4c" SPINE-DATA 14 0)) 14)
                    (record "4c" TOKEN (list (token "4c" SPINE-DATA 15 0)) 15)
                    (record "==" TOKEN (list (token "==" MEASURE 16 0)) 16)
                    (record "*-" TOKEN (list (token "*-" SPINE-TERMINATOR 17 0)) 17)))
(check-expect (hgraph->lolot (hgraph
                              (root (list (list (leaf (token "**kern" EXCLUSIVE-INTERPRETATION 0 0))
                                                (leaf (token "*clefG2" CLEF 1 0))
                                                (leaf (token "*k[]" KEY-SIG 2 0))
                                                (leaf (token "*a:" KEY-LABEL 3 0))
                                                (leaf (token "*M3/4" TIME-SIG 4 0))
                                                (leaf (token "4c" SPINE-DATA 5 0))
                                                (leaf (token "4c" SPINE-DATA 6 0))
                                                (leaf (token "4c" SPINE-DATA 7 0))
                                                (leaf (token "=2" MEASURE 8 0))
                                                (leaf (token "4c" SPINE-DATA 9 0))
                                                (leaf (token "4c" SPINE-DATA 10 0))
                                                (leaf (token "4c" SPINE-DATA 11 0))
                                                (leaf (token "=3" MEASURE 12 0))
                                                (leaf (token "4c" SPINE-DATA 13 0))
                                                (leaf (token "4c" SPINE-DATA 14 0))
                                                (leaf (token "4c" SPINE-DATA 15 0))
                                                (leaf (token "==" MEASURE 16 0))
                                                (leaf (token "*-" SPINE-TERMINATOR 17 0)))))))
              (list (list (token "**kern" EXCLUSIVE-INTERPRETATION 0 0))
                    (list (token "*clefG2" CLEF 1 0))
                    (list (token "*k[]" KEY-SIG 2 0))
                    (list (token "*a:" KEY-LABEL 3 0))
                    (list (token "*M3/4" TIME-SIG 4 0))
                    (list (token "4c" SPINE-DATA 5 0))
                    (list (token "4c" SPINE-DATA 6 0))
                    (list (token "4c" SPINE-DATA 7 0))
                    (list (token "=2" MEASURE 8 0))
                    (list (token "4c" SPINE-DATA 9 0))
                    (list (token "4c" SPINE-DATA 10 0))
                    (list (token "4c" SPINE-DATA 11 0))
                    (list (token "=3" MEASURE 12 0))
                    (list (token "4c" SPINE-DATA 13 0))
                    (list (token "4c" SPINE-DATA 14 0))
                    (list (token "4c" SPINE-DATA 15 0))
                    (list (token "==" MEASURE 16 0))
                    (list (token "*-" SPINE-TERMINATOR 17 0))))
(check-expect (hfile->hgraph (path->hfile "../../data/count/one-spine-no-splits.krn"))
              (hgraph (root (list (list (leaf (token "**kern" EXCLUSIVE-INTERPRETATION 0 0))
                                        (leaf (token "*clefG2" CLEF 1 0))
                                        (leaf (token "*k[]" KEY-SIG 2 0))
                                        (leaf (token "*a:" KEY-LABEL 3 0))
                                        (leaf (token "*M3/4" TIME-SIG 4 0))
                                        (leaf (token "4c" SPINE-DATA 5 0))
                                        (leaf (token "4c" SPINE-DATA 6 0))
                                        (leaf (token "4c" SPINE-DATA 7 0))
                                        (leaf (token "=2" MEASURE 8 0))
                                        (leaf (token "4c" SPINE-DATA 9 0))
                                        (leaf (token "4c" SPINE-DATA 10 0))
                                        (leaf (token "4c" SPINE-DATA 11 0))
                                        (leaf (token "=3" MEASURE 12 0))
                                        (leaf (token "4c" SPINE-DATA 13 0))
                                        (leaf (token "4c" SPINE-DATA 14 0))
                                        (leaf (token "4c" SPINE-DATA 15 0))
                                        (leaf (token "==" MEASURE 16 0))
                                        (leaf (token "*-" SPINE-TERMINATOR 17 0)))))))
(check-expect (branch->lot (list (leaf (token "**kern" EXCLUSIVE-INTERPRETATION 0 0))
                                 (leaf (token "*clefG2" CLEF 1 0))
                                 (leaf (token "*k[]" KEY-SIG 2 0))
                                 (leaf (token "*a:" KEY-LABEL 3 0))
                                 (leaf (token "*M3/4" TIME-SIG 4 0))
                                 (leaf (token "4c" SPINE-DATA 5 0))
                                 (leaf (token "4c" SPINE-DATA 6 0))
                                 (leaf (token "4c" SPINE-DATA 7 0))
                                 (leaf (token "=2" MEASURE 8 0))
                                 (leaf (token "4c" SPINE-DATA 9 0))
                                 (leaf (token "4c" SPINE-DATA 10 0))
                                 (leaf (token "4c" SPINE-DATA 11 0))
                                 (leaf (token "=3" MEASURE 12 0))
                                 (leaf (token "4c" SPINE-DATA 13 0))
                                 (leaf (token "4c" SPINE-DATA 14 0))
                                 (leaf (token "4c" SPINE-DATA 15 0))
                                 (leaf (token "==" MEASURE 16 0))
                                 (leaf (token "*-" SPINE-TERMINATOR 17 0))))
              (list (token "**kern" EXCLUSIVE-INTERPRETATION 0 0)
                    (token "*clefG2" CLEF 1 0)
                    (token "*k[]" KEY-SIG 2 0)
                    (token "*a:" KEY-LABEL 3 0)
                    (token "*M3/4" TIME-SIG 4 0)
                    (token "4c" SPINE-DATA 5 0)
                    (token "4c" SPINE-DATA 6 0)
                    (token "4c" SPINE-DATA 7 0)
                    (token "=2" MEASURE 8 0)
                    (token "4c" SPINE-DATA 9 0)
                    (token "4c" SPINE-DATA 10 0)
                    (token "4c" SPINE-DATA 11 0)
                    (token "=3" MEASURE 12 0)
                    (token "4c" SPINE-DATA 13 0)
                    (token "4c" SPINE-DATA 14 0)
                    (token "4c" SPINE-DATA 15 0)
                    (token "==" MEASURE 16 0)
                    (token "*-" SPINE-TERMINATOR 17 0)))
(check-expect (gspines->linked-spines empty) empty)

(test)
