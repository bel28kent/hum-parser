#lang racket/base

(require "../../../../parser/data-definitions/data-definitions.rkt"
         "../../../../parser/functions/file.rkt"
         "../../../../parser/functions/spine-parser.rkt"
         "../../../../parser/data-structures/humdrum-graph/data-definitions/data-definitions.rkt"
         "../../../../parser/data-structures/humdrum-graph/functions/hgraph-to-hfile.rkt"
         "../../../../parser/data-structures/humdrum-graph/functions/hfile-to-hgraph.rkt"
         "../../../../parser/data-structures/linked-spine/data-definitions/data-definitions.rkt"
         "../../../../parser/data-structures/linked-spine/functions/gspines-to-linked-spines.rkt"
         test-engine/racket-tests)

;; Node definitions
(define TERM-9-0 (terminator-node (token "*-" 'SpineTerminator 9 0)))
(define J-8-0 (token-node (token "*v" 'SpineJoin 8 0) (box-immutable TERM-9-0)))
(define J-8-1 (token-node (token "*v" 'SpineJoin 8 1) (box-immutable TERM-9-0)))
(define NULL-7-0 (token-node (token "*" 'NullInterpretation 7 0) (box-immutable J-8-0)))
(define J-7-1 (token-node (token "*v" 'SpineJoin 7 1) (box-immutable J-8-1)))
(define J-7-2 (token-node (token "*v" 'SpineJoin 7 2) (box-immutable J-8-1)))
(define NULL-6-0 (token-node (token "*" 'NullInterpretation 6 0) (box-immutable NULL-7-0)))
(define NULL-6-1 (token-node (token "*" 'NullInterpretation 6 1) (box-immutable J-7-1)))
(define J-6-2 (token-node (token "*v" 'SpineJoin 6 2) (box-immutable J-7-2)))
(define J-6-3 (token-node (token "*v" 'SpineJoin 6 3) (box-immutable J-7-2)))
(define 4c-5-0 (token-node (token "4c" 'SpineData 5 0) (box-immutable NULL-6-0)))
(define 4c-5-1 (token-node (token "4c" 'SpineData 5 1) (box-immutable NULL-6-1)))
(define 4c-5-2 (token-node (token "4c" 'SpineData 5 2) (box-immutable J-6-2)))
(define 4c-5-3 (token-node (token "4c" 'SpineData 5 3) (box-immutable J-6-3)))
(define 4c-4-0 (token-node (token "4c" 'SpineData 4 0) (box-immutable 4c-5-0)))
(define 4c-4-1 (token-node (token "4c" 'SpineData 4 1) (box-immutable 4c-5-1)))
(define 4c-4-2 (token-node (token "4c" 'SpineData 4 2) (box-immutable 4c-5-2)))
(define 4c-4-3 (token-node (token "4c" 'SpineData 4 3) (box-immutable 4c-5-3)))
(define 4c-3-0 (token-node (token "4c" 'SpineData 3 0) (box-immutable 4c-4-0)))
(define 4c-3-1 (token-node (token "4c" 'SpineData 3 1) (box-immutable 4c-4-1)))
(define 4c-3-2 (token-node (token "4c" 'SpineData 3 2) (box-immutable 4c-4-2)))
(define 4c-3-3 (token-node (token "4c" 'SpineData 3 3) (box-immutable 4c-4-3)))
(define S-2-0 (split-node (token "*^" 'SpineSplit 2 0)
                          (box-immutable 4c-3-0)
                          (box-immutable 4c-3-1)))
(define S-2-1 (split-node (token "*^" 'SpineSplit 2 1)
                          (box-immutable 4c-3-2)
                          (box-immutable 4c-3-3)))
(define S-1-0 (split-node (token "*^" 'SpineSplit 1 0)
                          (box-immutable S-2-0)
                          (box-immutable S-2-1)))
(define KERN-0-0 (token-node (token "**kern" 'ExclusiveInterpretation 0 0) (box-immutable S-1-0)))

(check-expect (path->hfile "../../data/order/spine-splits-simultaneous.krn")
              (hfile (list (record "**kern" TOKEN
                                   (list (token "**kern" 'ExclusiveInterpretation 0 0))
                                   0)
                           (record "*^" TOKEN
                                   (list (token "*^" 'SpineSplit 1 0))
                                   1)
                           (record "*^\t*^" TOKEN
                                   (list (token "*^" 'SpineSplit 2 0)
                                         (token "*^" 'SpineSplit 2 1))
                                   2)
                           (record "4c\t4c\t4c\t4c" TOKEN
                                   (list (token "4c" 'SpineData 3 0)
                                         (token "4c" 'SpineData 3 1)
                                         (token "4c" 'SpineData 3 2)
                                         (token "4c" 'SpineData 3 3))
                                   3)
                           (record "4c\t4c\t4c\t4c" TOKEN
                                   (list (token "4c" 'SpineData 4 0)
                                         (token "4c" 'SpineData 4 1)
                                         (token "4c" 'SpineData 4 2)
                                         (token "4c" 'SpineData 4 3))
                                   4)
                           (record "4c\t4c\t4c\t4c" TOKEN
                                   (list (token "4c" 'SpineData 5 0)
                                         (token "4c" 'SpineData 5 1)
                                         (token "4c" 'SpineData 5 2)
                                         (token "4c" 'SpineData 5 3))
                                   5)
                           (record "*\t*\t*v\t*v" TOKEN
                                   (list (token "*" 'NullInterpretation 6 0)
                                         (token "*" 'NullInterpretation 6 1)
                                         (token "*v" 'SpineJoin 6 2)
                                         (token "*v" 'SpineJoin 6 3))
                                   6)
                           (record "*\t*v\t*v" TOKEN
                                   (list (token "*" 'NullInterpretation 7 0)
                                         (token "*v" 'SpineJoin 7 1)
                                         (token "*v" 'SpineJoin 7 2))
                                   7)
                           (record "*v\t*v" TOKEN
                                   (list (token "*v" 'SpineJoin 8 0)
                                         (token "*v" 'SpineJoin 8 1))
                                   8)
                           (record "*-" TOKEN
                                   (list (token "*-" 'SpineTerminator 9 0))
                                   9))))
(check-expect (spine-parser (path->hfile "../../data/order/spine-splits-simultaneous.krn"))
              (list (global-spine KERN
                                  (list (list (token "**kern" 'ExclusiveInterpretation 0 0))
                                        (list (token "*^" 'SpineSplit 1 0))
                                        (list (token "*^" 'SpineSplit 2 0)
                                              (token "*^" 'SpineSplit 2 1))
                                        (list (token "4c" 'SpineData 3 0)
                                              (token "4c" 'SpineData 3 1)
                                              (token "4c" 'SpineData 3 2)
                                              (token "4c" 'SpineData 3 3))
                                        (list (token "4c" 'SpineData 4 0)
                                              (token "4c" 'SpineData 4 1)
                                              (token "4c" 'SpineData 4 2)
                                              (token "4c" 'SpineData 4 3))
                                        (list (token "4c" 'SpineData 5 0)
                                              (token "4c" 'SpineData 5 1)
                                              (token "4c" 'SpineData 5 2)
                                              (token "4c" 'SpineData 5 3))
                                        (list (token "*" 'NullInterpretation 6 0)
                                              (token "*" 'NullInterpretation 6 1)
                                              (token "*v" 'SpineJoin 6 2)
                                              (token "*v" 'SpineJoin 6 3))
                                        (list (token "*" 'NullInterpretation 7 0)
                                              (token "*v" 'SpineJoin 7 1)
                                              (token "*v" 'SpineJoin 7 2))
                                        (list (token "*v" 'SpineJoin 8 0)
                                              (token "*v" 'SpineJoin 8 1))
                                        (list (token "*-" 'SpineTerminator 9 0)))
                                  0)))
(check-expect (hgraph->hfile
               (hgraph (root (list (list (leaf (token "**kern" 'ExclusiveInterpretation 0 0))
                                         (parent (token "*^" 'SpineSplit 1 0)
                                                 (list (parent (token "*^" 'SpineSplit 2 0)
                                                               (list (leaf (token "4c" 'SpineData 3 0))
                                                                     (leaf (token "4c" 'SpineData 4 0))
                                                                     (leaf (token "4c" 'SpineData 5 0))
                                                                     (leaf (token "*" 'NullInterpretation 6 0))
                                                                     (leaf (token "*" 'NullInterpretation 7 0))
                                                                     (leaf (token "*v" 'SpineJoin 8 0)))
                                                               (list (leaf (token "4c" 'SpineData 3 1))
                                                                     (leaf (token "4c" 'SpineData 4 1))
                                                                     (leaf (token "4c" 'SpineData 5 1))
                                                                     (leaf (token "*" 'NullInterpretation 6 1))
                                                                     (leaf (token "*v" 'SpineJoin 7 0))))
                                                       (leaf (token "*v" 'SpineJoin 8 0)))
                                                 (list (parent (token "*^" 'SpineSplit 2 1)
                                                               (list (leaf (token "4c" 'SpineData 3 2))
                                                                     (leaf (token "4c" 'SpineData 4 2))
                                                                     (leaf (token "4c" 'SpineData 5 2))
                                                                     (leaf (token "*v" 'SpineJoin 6 2)))
                                                               (list (leaf (token "4c" 'SpineData 3 3))
                                                                     (leaf (token "4c" 'SpineData 4 3))
                                                                     (leaf (token "4c" 'SpineData 5 3))
                                                                     (leaf (token "*v" 'SpineJoin 6 3))))
                                                       (leaf (token "*v" 'SpineJoin 7 1))))
                                         (leaf (token "*-" 'SpineTerminator 9 0)))))))
              (path->hfile "../../data/order/spine-splits-simultaneous.krn"))
(check-expect (lolot->lor (list (list (token "**kern" 'ExclusiveInterpretation 0 0))
                                (list (token "*^" 'SpineSplit 1 0))
                                (list (token "*^" 'SpineSplit 2 0)
                                      (token "*^" 'SpineSplit 2 1))
                                (list (token "4c" 'SpineData 3 0)
                                      (token "4c" 'SpineData 3 1)
                                      (token "4c" 'SpineData 3 2)
                                      (token "4c" 'SpineData 3 3))
                                (list (token "4c" 'SpineData 4 0)
                                      (token "4c" 'SpineData 4 1)
                                      (token "4c" 'SpineData 4 2)
                                      (token "4c" 'SpineData 4 3))
                                (list (token "4c" 'SpineData 5 0)
                                      (token "4c" 'SpineData 5 1)
                                      (token "4c" 'SpineData 5 2)
                                      (token "4c" 'SpineData 5 3))
                                (list (token "*" 'NullInterpretation 6 0)
                                      (token "*" 'NullInterpretation 6 1)
                                      (token "*v" 'SpineJoin 6 2)
                                      (token "*v" 'SpineJoin 6 3))
                                (list (token "*" 'NullInterpretation 7 0)
                                      (token "*v" 'SpineJoin 7 1)
                                      (token "*v" 'SpineJoin 7 2))
                                (list (token "*v" 'SpineJoin 8 0)
                                      (token "*v" 'SpineJoin 8 1))
                                (list (token "*-" 'SpineTerminator 9 0))))
              (list (record "**kern" TOKEN
                            (list (token "**kern" 'ExclusiveInterpretation 0 0))
                            0)
                    (record "*^" TOKEN
                            (list (token "*^" 'SpineSplit 1 0))
                            1)
                    (record "*^\t*^" TOKEN
                            (list (token "*^" 'SpineSplit 2 0)
                                  (token "*^" 'SpineSplit 2 1))
                            2)
                    (record "4c\t4c\t4c\t4c" TOKEN
                            (list (token "4c" 'SpineData 3 0)
                                  (token "4c" 'SpineData 3 1)
                                  (token "4c" 'SpineData 3 2)
                                  (token "4c" 'SpineData 3 3))
                            3)
                    (record "4c\t4c\t4c\t4c" TOKEN
                            (list (token "4c" 'SpineData 4 0)
                                  (token "4c" 'SpineData 4 1)
                                  (token "4c" 'SpineData 4 2)
                                  (token "4c" 'SpineData 4 3))
                            4)
                    (record "4c\t4c\t4c\t4c" TOKEN
                            (list (token "4c" 'SpineData 5 0)
                                  (token "4c" 'SpineData 5 1)
                                  (token "4c" 'SpineData 5 2)
                                  (token "4c" 'SpineData 5 3))
                            5)
                    (record "*\t*\t*v\t*v" TOKEN
                            (list (token "*" 'NullInterpretation 6 0)
                                  (token "*" 'NullInterpretation 6 1)
                                  (token "*v" 'SpineJoin 6 2)
                                  (token "*v" 'SpineJoin 6 3))
                            6)
                    (record "*\t*v\t*v" TOKEN
                            (list (token "*" 'NullInterpretation 7 0)
                                  (token "*v" 'SpineJoin 7 1)
                                  (token "*v" 'SpineJoin 7 2))
                            7)
                    (record "*v\t*v" TOKEN
                            (list (token "*v" 'SpineJoin 8 0)
                                  (token "*v" 'SpineJoin 8 1))
                            8)
                    (record "*-" TOKEN
                            (list (token "*-" 'SpineTerminator 9 0))
                            9)))
(check-expect (hgraph->lolot
               (hgraph (root (list (list (leaf (token "**kern" 'ExclusiveInterpretation 0 0))
                                         (parent (token "*^" 'SpineSplit 1 0)
                                                 (list (parent (token "*^" 'SpineSplit 2 0)
                                                               (list (leaf (token "4c" 'SpineData 3 0))
                                                                     (leaf (token "4c" 'SpineData 4 0))
                                                                     (leaf (token "4c" 'SpineData 5 0))
                                                                     (leaf (token "*" 'NullInterpretation 6 0))
                                                                     (leaf (token "*" 'NullInterpretation 7 0))
                                                                     (leaf (token "*v" 'SpineJoin 8 0)))
                                                               (list (leaf (token "4c" 'SpineData 3 1))
                                                                     (leaf (token "4c" 'SpineData 4 1))
                                                                     (leaf (token "4c" 'SpineData 5 1))
                                                                     (leaf (token "*" 'NullInterpretation 6 1))
                                                                     (leaf (token "*v" 'SpineJoin 7 1))))
                                                       (leaf (token "*v" 'SpineJoin 8 0)))
                                                 (list (parent (token "*^" 'SpineSplit 2 1)
                                                               (list (leaf (token "4c" 'SpineData 3 2))
                                                                     (leaf (token "4c" 'SpineData 4 2))
                                                                     (leaf (token "4c" 'SpineData 5 2))
                                                                     (leaf (token "*v" 'SpineJoin 6 2)))
                                                               (list (leaf (token "4c" 'SpineData 3 3))
                                                                     (leaf (token "4c" 'SpineData 4 3))
                                                                     (leaf (token "4c" 'SpineData 5 3))
                                                                     (leaf (token "*v" 'SpineJoin 6 3))))
                                                       (leaf (token "*v" 'SpineJoin 7 1))))
                                         (leaf (token "*-" 'SpineTerminator 9 0)))))))
              (list (list (token "**kern" 'ExclusiveInterpretation 0 0))
                    (list (token "*^" 'SpineSplit 1 0))
                    (list (token "*^" 'SpineSplit 2 0)
                          (token "*^" 'SpineSplit 2 1))
                    (list (token "4c" 'SpineData 3 0)
                          (token "4c" 'SpineData 3 1)
                          (token "4c" 'SpineData 3 2)
                          (token "4c" 'SpineData 3 3))
                    (list (token "4c" 'SpineData 4 0)
                          (token "4c" 'SpineData 4 1)
                          (token "4c" 'SpineData 4 2)
                          (token "4c" 'SpineData 4 3))
                    (list (token "4c" 'SpineData 5 0)
                          (token "4c" 'SpineData 5 1)
                          (token "4c" 'SpineData 5 2)
                          (token "4c" 'SpineData 5 3))
                    (list (token "*" 'NullInterpretation 6 0)
                          (token "*" 'NullInterpretation 6 1)
                          (token "*v" 'SpineJoin 6 2)
                          (token "*v" 'SpineJoin 6 3))
                    (list (token "*" 'NullInterpretation 7 0)
                          (token "*v" 'SpineJoin 7 1)
                          (token "*v" 'SpineJoin 7 2))
                    (list (token "*v" 'SpineJoin 8 0)
                          (token "*v" 'SpineJoin 8 1))
                    (list (token "*-" 'SpineTerminator 9 0))))
(check-expect (hfile->hgraph (path->hfile "../../data/order/spine-splits-simultaneous.krn"))
                             (hgraph (root (list (list (leaf (token "**kern" 'ExclusiveInterpretation 0 0))
                                                       (parent (token "*^" 'SpineSplit 1 0)
                                                               (list (parent (token "*^" 'SpineSplit 2 0)
                                                                             (list (leaf (token "4c" 'SpineData 3 0))
                                                                                   (leaf (token "4c" 'SpineData 4 0))
                                                                                   (leaf (token "4c" 'SpineData 5 0))
                                                                                   (leaf (token "*" 'NullInterpretation 6 0))
                                                                                   (leaf (token "*" 'NullInterpretation 7 0))
                                                                                   (leaf (token "*v" 'SpineJoin 8 0)))
                                                                             (list (leaf (token "4c" 'SpineData 3 1))
                                                                                   (leaf (token "4c" 'SpineData 4 1))
                                                                                   (leaf (token "4c" 'SpineData 5 1))
                                                                                   (leaf (token "*" 'NullInterpretation 6 1))
                                                                                   (leaf (token "*v" 'SpineJoin 7 1))))
                                                                     (leaf (token "*v" 'SpineJoin 8 0)))
                                                               (list (parent (token "*^" 'SpineSplit 2 1)
                                                                             (list (leaf (token "4c" 'SpineData 3 2))
                                                                                   (leaf (token "4c" 'SpineData 4 2))
                                                                                   (leaf (token "4c" 'SpineData 5 2))
                                                                                   (leaf (token "*v" 'SpineJoin 6 2)))
                                                                             (list (leaf (token "4c" 'SpineData 3 3))
                                                                                   (leaf (token "4c" 'SpineData 4 3))
                                                                                   (leaf (token "4c" 'SpineData 5 3))
                                                                                   (leaf (token "*v" 'SpineJoin 6 3))))
                                                                     (leaf (token "*v" 'SpineJoin 7 1))))
                                                       (leaf (token "*-" 'SpineTerminator 9 0)))))))
(check-expect (gspines->linked-spines (spine-parser (path->hfile "../../data/order/spine-splits-simultaneous.krn"))
                                      (path->hfile "../../data/order/spine-splits-simultaneous.krn"))
              (list (linked-spine KERN-0-0)))
(check-expect (extract-spine-arity SIM) (spine-arity 1 (list (list 1)
                                                             (list 1)
                                                             (list 2)
                                                             (list 4)
                                                             (list 4)
                                                             (list 4)
                                                             (list 4)
                                                             (list 3)
                                                             (list 2)
                                                             (list 1))))

(test)
