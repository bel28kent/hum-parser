#lang racket/base

(require "../../../../../parser/HumdrumSyntax.rkt"
         "../../../../../parser/file-fn.rkt"
         "../../../../../parser/spine-parsing-fn.rkt"
         "../../../../../parser/humdrum-graph/HumdrumGraph.rkt"
         "../../../../../parser/humdrum-graph/hfile-to-hgraph-fn.rkt"
         "../../../../../parser/humdrum-graph/hgraph-to-hfile-fn.rkt"
         "../../../../../parser/linked-spine/LinkedSpine.rkt"
         "../../../../../parser/linked-spine/gspines-to-linked-spines-fn.rkt"
         test-engine/racket-tests)

;; Node Definitions
(define TERM-6-0 (terminator-node (token "*-" 'SpineTerminator 6 0)))
(define J-5-0 (token-node (token "*v" 'SpineJoin 5 0) (box-immutable TERM-6-0)))
(define J-5-1 (token-node (token "*v" 'SpineJoin 5 1) (box-immutable TERM-6-0)))
(define 4c-4-0 (token-node (token "4c" 'SpineData 4 0) (box-immutable J-5-0)))
(define 4c-4-1 (token-node (token "4c" 'SpineData 4 1) (box-immutable J-5-1)))
(define 4c-3-0 (token-node (token "4c" 'SpineData 3 0) (box-immutable 4c-4-0)))
(define 4c-3-1 (token-node (token "4c" 'SpineData 3 1) (box-immutable 4c-4-1)))
(define 4c-2-0 (token-node (token "4c" 'SpineData 2 0) (box-immutable 4c-3-0)))
(define 4c-2-1 (token-node (token "4c" 'SpineData 2 1) (box-immutable 4c-3-1)))
(define S-1-0 (split-node (token "*^" 'SpineSplit 1 0)
                          (box-immutable 4c-2-0)
                          (box-immutable 4c-2-1)))
(define KERN-0-0 (token-node (token "**kern" 'ExclusiveInterpretation 0 0) (box-immutable S-1-0)))

(check-expect (path->hfile "../../data/order/spine-splits-joins-immediately.krn")
              (hfile (list (record "**kern"
                                   'ExclusiveInterpretation
                                   (list (token "**kern" 'ExclusiveInterpretation 0 0))
                                   0)
                           (record "*^" 'TandemInterpretation (list (token "*^" 'SpineSplit 1 0)) 1)
                           (record "4c\t4c" 'Token (list (token "4c" 'SpineData 2 0)
                                                        (token "4c" 'SpineData 2 1))
                                   2)
                           (record "4c\t4c" 'Token (list (token "4c" 'SpineData 3 0)
                                                        (token "4c" 'SpineData 3 1))
                                   3)
                           (record "4c\t4c" 'Token (list (token "4c" 'SpineData 4 0)
                                                        (token "4c" 'SpineData 4 1))
                                   4)
                           (record "*v\t*v" 'TandemInterpretation (list (token "*v" 'SpineJoin 5 0)
                                                        (token "*v" 'SpineJoin 5 1))
                                   5)
                           (record "*-" 'TandemInterpretation (list (token "*-" 'SpineTerminator 6 0)) 6))))
(check-expect (spine-parser (path->hfile "../../data/order/spine-splits-joins-immediately.krn"))
              (list (global-spine 'Kern
                                  (list (list (token "**kern" 'ExclusiveInterpretation 0 0))
                                        (list (token "*^" 'SpineSplit 1 0))
                                        (list (token "4c" 'SpineData 2 0)
                                              (token "4c" 'SpineData 2 1))
                                        (list (token "4c" 'SpineData 3 0)
                                              (token "4c" 'SpineData 3 1))
                                        (list (token "4c" 'SpineData 4 0)
                                              (token "4c" 'SpineData 4 1))
                                        (list (token "*v" 'SpineJoin 5 0)
                                              (token "*v" 'SpineJoin 5 1))
                                        (list (token "*-" 'SpineTerminator 6 0)))
                                  0)))
(check-expect (hgraph->hfile (hgraph (root (list
                                            (list
                                             (leaf (token "**kern" 'ExclusiveInterpretation 0 0))
                                             (parent (token "*^" 'SpineSplit 1 0)
                                                     (list (leaf (token "4c" 'SpineData 2 0))
                                                           (leaf (token "4c" 'SpineData 3 0))
                                                           (leaf (token "4c" 'SpineData 4 0))
                                                           (leaf (token "*v" 'SpineJoin 5 0)))
                                                     (list (leaf (token "4c" 'SpineData 2 1))
                                                           (leaf (token "4c" 'SpineData 3 1))
                                                           (leaf (token "4c" 'SpineData 4 1))
                                                           (leaf (token "*v" 'SpineJoin 5 1))))
                                             (leaf (token "*-" 'SpineTerminator 6 0)))))))
              (path->hfile "../../data/order/spine-splits-joins-immediately.krn"))
(check-expect (tokens->records (list (list (token "**kern" 'ExclusiveInterpretation 0 0))
                                (list (token "*^" 'SpineSplit 1 0))
                                (list (token "4c" 'SpineData 2 0) (token "4c" 'SpineData 2 1))
                                (list (token "4c" 'SpineData 3 0) (token "4c" 'SpineData 3 1))
                                (list (token "4c" 'SpineData 4 0) (token "4c" 'SpineData 4 1))
                                (list (token "*v" 'SpineJoin 5 0) (token "*v" 'SpineJoin 5 1))
                                (list (token "*-" 'SpineTerminator 6 0))))
              (list (record "**kern" 'ExclusiveInterpretation (list (token "**kern" 'ExclusiveInterpretation 0 0)) 0)
                    (record "*^" 'TandemInterpretation (list (token "*^" 'SpineSplit 1 0)) 1)
                    (record "4c\t4c" 'Token (list (token "4c" 'SpineData 2 0)
                                                 (token "4c" 'SpineData 2 1))
                            2)
                    (record "4c\t4c" 'Token (list (token "4c" 'SpineData 3 0)
                                                 (token "4c" 'SpineData 3 1))
                            3)
                    (record "4c\t4c" 'Token (list (token "4c" 'SpineData 4 0)
                                                 (token "4c" 'SpineData 4 1))
                            4)
                    (record "*v\t*v" 'TandemInterpretation (list (token "*v" 'SpineJoin 5 0)
                                                 (token "*v" 'SpineJoin 5 1))
                            5)
                    (record "*-" 'TandemInterpretation (list (token "*-" 'SpineTerminator 6 0)) 6)))
(check-expect (hgraph->tokens (hgraph (root (list
                                            (list
                                             (leaf (token "**kern" 'ExclusiveInterpretation 0 0))
                                             (parent (token "*^" 'SpineSplit 1 0)
                                                     (list (leaf (token "4c" 'SpineData 2 0))
                                                           (leaf (token "4c" 'SpineData 3 0))
                                                           (leaf (token "4c" 'SpineData 4 0))
                                                           (leaf (token "*v" 'SpineJoin 5 0)))
                                                     (list (leaf (token "4c" 'SpineData 2 1))
                                                           (leaf (token "4c" 'SpineData 3 1))
                                                           (leaf (token "4c" 'SpineData 4 1))
                                                           (leaf (token "*v" 'SpineJoin 5 1))))
                                             (leaf (token "*-" 'SpineTerminator 6 0)))))))
              (list (list (token "**kern" 'ExclusiveInterpretation 0 0))
                    (list (token "*^" 'SpineSplit 1 0))
                    (list (token "4c" 'SpineData 2 0) (token "4c" 'SpineData 2 1))
                    (list (token "4c" 'SpineData 3 0) (token "4c" 'SpineData 3 1))
                    (list (token "4c" 'SpineData 4 0) (token "4c" 'SpineData 4 1))
                    (list (token "*v" 'SpineJoin 5 0) (token "*v" 'SpineJoin 5 1))
                    (list (token "*-" 'SpineTerminator 6 0))))
(check-expect (hfile->hgraph (path->hfile "../../data/order/spine-splits-joins-immediately.krn"))
              (hgraph (root (list (list (leaf (token "**kern" 'ExclusiveInterpretation 0 0))
                                        (parent (token "*^" 'SpineSplit 1 0)
                                                (list (leaf (token "4c" 'SpineData 2 0))
                                                      (leaf (token "4c" 'SpineData 3 0))
                                                      (leaf (token "4c" 'SpineData 4 0))
                                                      (leaf (token "*v" 'SpineJoin 5 0)))
                                                (list (leaf (token "4c" 'SpineData 2 1))
                                                      (leaf (token "4c" 'SpineData 3 1))
                                                      (leaf (token "4c" 'SpineData 4 1))
                                                      (leaf (token "*v" 'SpineJoin 5 1))))
                                        (leaf (token "*-" 'SpineTerminator 6 0)))))))
(check-expect (gspines->linked-spines (spine-parser (path->hfile "../../data/order/spine-splits-joins-immediately.krn"))
                                      (path->hfile "../../data/order/spine-splits-joins-immediately.krn"))
              (list (linked-spine KERN-0-0)))
(check-expect (extract-spine-arity (path->hfile "../../data/order/spine-splits-joins-immediately.krn"))
              (spine-arity 1 (list (list 1)
                                   (list 1)
                                   (list 2)
                                   (list 2)
                                   (list 2)
                                   (list 2)
                                   (list 1))))

(test)
