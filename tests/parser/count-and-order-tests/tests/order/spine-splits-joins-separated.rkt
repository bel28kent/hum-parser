#lang racket/base

(require "../../../../parser/data-definitions/data-definitions.rkt"
         "../../../../parser/functions/file.rkt"
         "../../../../parser/functions/spine-parser.rkt"
         "../../../../parser/data-structures/humdrum-graph/data-definitions/data-definitions.rkt"
         "../../../../parser/data-structures/humdrum-graph/functions/hgraph-to-hfile.rkt"
         "../../../../parser/data-structures/humdrum-graph/functions/hfile-to-hgraph.rkt"
         "../../../../parser/data-structures/linked-spine/data-definitions/data-definitions.rkt"
         "../../../../parser/data-structures/linked-spine/functions/gspines-to-linked-spines.rkt"
         test-engine/racket-tests)

;; Node definitions
(define TERM-8-0 (terminator-node (token "*-" 'SpineTerminator 8 0)))
(define J-7-0 (token-node (token "*v" 'SpineJoin 7 0) (box-immutable TERM-8-0)))
(define J-7-1 (token-node (token "*v" 'SpineJoin 7 1) (box-immutable TERM-8-0)))
(define 4c-6-0 (token-node (token "4c" 'SpineData 6 0) (box-immutable J-7-0)))
(define 4c-6-1 (token-node (token "4c" 'SpineData 6 1) (box-immutable J-7-1)))
(define NULL-5-0 (token-node (token "*" 'NullInterpretation 5 0) (box-immutable 4c-6-0)))
(define J-5-1 (token-node (token "*v" 'SpineJoin 5 1) (box-immutable 4c-6-1)))
(define J-5-2 (token-node (token "*v" 'SpineJoin 5 2) (box-immutable 4c-6-1)))
(define 4c-4-0 (token-node (token "4c" 'SpineData 4 0) (box-immutable NULL-5-0)))
(define 4c-4-1 (token-node (token "4c" 'SpineData 4 1) (box-immutable J-5-1)))
(define 4c-4-2 (token-node (token "4c" 'SpineData 4 2) (box-immutable J-5-2)))
(define NULL-3-0 (token-node (token "*" 'NullInterpretation 3 0) (box-immutable 4c-4-0)))
(define S-3-1 (split-node (token "*^" 'SpineSplit 3 1)
                          (box-immutable 4c-4-1)
                          (box-immutable 4c-4-2)))
(define 4c-2-0 (token-node (token "4c" 'SpineData 2 0) (box-immutable NULL-3-0)))
(define 4c-2-1 (token-node (token "4c" 'SpineData 2 1) (box-immutable S-3-1)))
(define S-1-0 (split-node (token "*^" 'SpineSplit 1 0)
                          (box-immutable 4c-2-0)
                          (box-immutable 4c-2-1)))
(define KERN-0-0 (token-node (token "**kern" 'ExclusiveInterpretation 0 0) (box-immutable S-1-0)))

(check-expect (path->hfile "../../data/order/spine-splits-joins-separated.krn")
              (hfile (list (record "**kern" TOKEN
                                   (list (token "**kern" 'ExclusiveInterpretation 0 0)) 0)
                           (record "*^" TOKEN (list (token "*^" 'SpineSplit 1 0)) 1)
                           (record "4c\t4c" TOKEN (list (token "4c" 'SpineData 2 0)
                                                        (token "4c" 'SpineData 2 1))
                                   2)
                           (record "*\t*^" TOKEN (list (token "*" 'NullInterpretation 3 0)
                                                       (token "*^" 'SpineSplit 3 1))
                                   3)
                           (record "4c\t4c\t4c" TOKEN (list (token "4c" 'SpineData 4 0)
                                                            (token "4c" 'SpineData 4 1)
                                                            (token "4c" 'SpineData 4 2))
                                   4)
                           (record "*\t*v\t*v" TOKEN (list (token "*" 'NullInterpretation 5 0)
                                                           (token "*v" 'SpineJoin 5 1)
                                                           (token "*v" 'SpineJoin 5 2))
                                   5)
                           (record "4c\t4c" TOKEN (list (token "4c" 'SpineData 6 0)
                                                        (token "4c" 'SpineData 6 1))
                                   6)
                           (record "*v\t*v" TOKEN (list (token "*v" 'SpineJoin 7 0)
                                                        (token "*v" 'SpineJoin 7 1)) 7)
                           (record "*-" TOKEN (list (token "*-" 'SpineTerminator 8 0)) 8))))
(check-expect (spine-parser (path->hfile "../../data/order/spine-splits-joins-separated.krn"))
              (list (global-spine KERN
                                  (list (list (token "**kern" 'ExclusiveInterpretation 0 0))
                                        (list (token "*^" 'SpineSplit 1 0))
                                        (list (token "4c" 'SpineData 2 0)
                                              (token "4c" 'SpineData 2 1))
                                        (list (token "*" 'NullInterpretation 3 0)
                                              (token "*^" 'SpineSplit 3 1))
                                        (list (token "4c" 'SpineData 4 0)
                                              (token "4c" 'SpineData 4 1)
                                              (token "4c" 'SpineData 4 2))
                                        (list (token "*" 'NullInterpretation 5 0)
                                              (token "*v" 'SpineJoin 5 1)
                                              (token "*v" 'SpineJoin 5 2))
                                        (list (token "4c" 'SpineData 6 0)
                                              (token "4c" 'SpineData 6 1))
                                        (list (token "*v" 'SpineJoin 7 0)
                                              (token "*v" 'SpineJoin 7 1))
                                        (list (token "*-" 'SpineTerminator 8 0)))
                                  0)))
(check-expect (hgraph->hfile
               (hgraph (root (list (list (leaf (token "**kern" 'ExclusiveInterpretation 0 0))
                                            (parent (token "*^" 'SpineSplit 1 0)
                                                    (list (leaf (token "4c" 'SpineData 2 0))
                                                          (leaf (token "*" 'NullInterpretation 3 0))
                                                          (leaf (token "4c" 'SpineData 4 0))
                                                          (leaf (token "*" 'NullInterpretation 5 0))
                                                          (leaf (token "4c" 'SpineData 6 0))
                                                          (leaf (token "*v" 'SpineJoin 7 0)))
                                                    (list (leaf (token "4c" 'SpineData 2 1))
                                                          (parent (token "*^" 'SpineSplit 3 1)
                                                                  (list (leaf (token "4c" 'SpineData 4 1))
                                                                        (leaf (token "*v" 'SpineJoin 5 1)))
                                                                  (list (leaf (token "4c" 'SpineData 4 2))
                                                                        (leaf (token "*v" 'SpineJoin 5 2))))
                                                          (leaf (token "4c" 'SpineData 6 1))
                                                          (leaf (token "*v" 'SpineJoin 7 1))))
                                            (leaf (token "*-" 'SpineTerminator 8 0)))))))
              (path->hfile "../../data/order/spine-splits-joins-separated.krn"))
(check-expect (lolot->lor (list (list (token "**kern" 'ExclusiveInterpretation 0 0))
                                (list (token "*^" 'SpineSplit 1 0))
                                (list (token "4c" 'SpineData 2 0)
                                      (token "4c" 'SpineData 2 1))
                                (list (token "*" 'NullInterpretation 3 0)
                                      (token "*^" 'SpineSplit 3 1))
                                (list (token "4c" 'SpineData 4 0)
                                      (token "4c" 'SpineData 4 1)
                                      (token "4c" 'SpineData 4 2))
                                (list (token "*" 'NullInterpretation 5 0)
                                      (token "*v" 'SpineJoin 5 1)
                                      (token "*v" 'SpineJoin 5 2))
                                (list (token "4c" 'SpineData 6 0)
                                      (token "4c" 'SpineData 6 1))
                                (list (token "*v" 'SpineJoin 7 0)
                                      (token "*v" 'SpineJoin 7 1))
                                (list (token "*-" 'SpineTerminator 8 0))))
              (list (record "**kern" TOKEN
                            (list (token "**kern" 'ExclusiveInterpretation 0 0)) 0)
                    (record "*^" TOKEN (list (token "*^" 'SpineSplit 1 0)) 1)
                    (record "4c\t4c" TOKEN (list (token "4c" 'SpineData 2 0)
                                                 (token "4c" 'SpineData 2 1))
                            2)
                    (record "*\t*^" TOKEN (list (token "*" 'NullInterpretation 3 0)
                                                (token "*^" 'SpineSplit 3 1))
                            3)
                    (record "4c\t4c\t4c" TOKEN (list (token "4c" 'SpineData 4 0)
                                                     (token "4c" 'SpineData 4 1)
                                                     (token "4c" 'SpineData 4 2))
                            4)
                    (record "*\t*v\t*v" TOKEN (list (token "*" 'NullInterpretation 5 0)
                                                    (token "*v" 'SpineJoin 5 1)
                                                    (token "*v" 'SpineJoin 5 2))
                            5)
                    (record "4c\t4c" TOKEN (list (token "4c" 'SpineData 6 0)
                                                 (token "4c" 'SpineData 6 1))
                            6)
                    (record "*v\t*v" TOKEN (list (token "*v" 'SpineJoin 7 0)
                                                 (token "*v" 'SpineJoin 7 1)) 7)
                    (record "*-" TOKEN (list (token "*-" 'SpineTerminator 8 0)) 8)))
(check-expect (hgraph->lolot
               (hgraph (root (list (list (leaf (token "**kern" 'ExclusiveInterpretation 0 0))
                                            (parent (token "*^" 'SpineSplit 1 0)
                                                    (list (leaf (token "4c" 'SpineData 2 0))
                                                          (leaf (token "*" 'NullInterpretation 3 0))
                                                          (leaf (token "4c" 'SpineData 4 0))
                                                          (leaf (token "*" 'NullInterpretation 5 0))
                                                          (leaf (token "4c" 'SpineData 6 0))
                                                          (leaf (token "*v" 'SpineJoin 7 0)))
                                                    (list (leaf (token "4c" 'SpineData 2 1))
                                                          (parent (token "*^" 'SpineSplit 3 1)
                                                                  (list (leaf (token "4c" 'SpineData 4 1))
                                                                        (leaf (token "*v" 'SpineJoin 5 1)))
                                                                  (list (leaf (token "4c" 'SpineData 4 2))
                                                                        (leaf (token "*v" 'SpineJoin 5 2))))
                                                          (leaf (token "4c" 'SpineData 6 1))
                                                          (leaf (token "*v" 'SpineJoin 7 1))))
                                            (leaf (token "*-" 'SpineTerminator 8 0)))))))
              (list (list (token "**kern" 'ExclusiveInterpretation 0 0))
                    (list (token "*^" 'SpineSplit 1 0))
                    (list (token "4c" 'SpineData 2 0)
                          (token "4c" 'SpineData 2 1))
                    (list (token "*" 'NullInterpretation 3 0)
                          (token "*^" 'SpineSplit 3 1))
                    (list (token "4c" 'SpineData 4 0)
                          (token "4c" 'SpineData 4 1)
                          (token "4c" 'SpineData 4 2))
                    (list (token "*" 'NullInterpretation 5 0)
                          (token "*v" 'SpineJoin 5 1)
                          (token "*v" 'SpineJoin 5 2))
                    (list (token "4c" 'SpineData 6 0)
                          (token "4c" 'SpineData 6 1))
                    (list (token "*v" 'SpineJoin 7 0)
                          (token "*v" 'SpineJoin 7 1))
                    (list (token "*-" 'SpineTerminator 8 0))))
(check-expect (hfile->hgraph (path->hfile "../../data/order/spine-splits-joins-separated.krn"))
              (hgraph (root (list (list (leaf (token "**kern" 'ExclusiveInterpretation 0 0))
                                           (parent (token "*^" 'SpineSplit 1 0)
                                                   (list (leaf (token "4c" 'SpineData 2 0))
                                                         (leaf (token "*" 'NullInterpretation 3 0))
                                                         (leaf (token "4c" 'SpineData 4 0))
                                                         (leaf (token "*" 'NullInterpretation 5 0))
                                                         (leaf (token "4c" 'SpineData 6 0))
                                                         (leaf (token "*v" 'SpineJoin 7 0)))
                                                   (list (leaf (token "4c" 'SpineData 2 1))
                                                         (parent (token "*^" 'SpineSplit 3 1)
                                                                 (list (leaf (token "4c" 'SpineData 4 1))
                                                                       (leaf (token "*v" 'SpineJoin 5 1)))
                                                                 (list (leaf (token "4c" 'SpineData 4 2))
                                                                       (leaf (token "*v" 'SpineJoin 5 2))))
                                                         (leaf (token "4c" 'SpineData 6 1))
                                                         (leaf (token "*v" 'SpineJoin 7 1))))
                                           (leaf (token "*-" 'SpineTerminator 8 0)))))))
(check-expect (gspines->linked-spines (spine-parser (path->hfile "../../data/order/spine-splits-joins-separated.krn"))
                                      (path->hfile "../../data/order/spine-splits-joins-separated.krn"))
              (list (linked-spine KERN-0-0)))

(test)
