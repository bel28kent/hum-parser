#lang racket/base

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; hum-parser: tools: autowedge
;;    tests for autowedge
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(require test-engine/racket-tests
         "../../hum-parser.rkt"
         "../../tools/autowedge/autowedge.rkt")

(define wedge-tree (hfile->ab-hgraph (path->hfile "data/wedge.krn") htree))
(define parent-tree (hfile->ab-hgraph (path->hfile "data/parent.krn") htree))

; autowedge
(check-expect (autowedge wedge-tree)
              (ab-hgraph (root (list (list (leaf (token "**kern" EXCLUSIVE-INTERPRETATION 0 0))
                                           (leaf (token "4a" SPINE-DATA 1 0))
                                           (leaf (token "4a" SPINE-DATA 2 0))
                                           (leaf (token "4a" SPINE-DATA 3 0))
                                           (leaf (token "4a" SPINE-DATA 4 0))
                                           (leaf (token "=2" MEASURE 5 0))
                                           (leaf (token "4a" SPINE-DATA 6 0))
                                           (leaf (token "4a" SPINE-DATA 7 0))
                                           (leaf (token "4a" SPINE-DATA 8 0))
                                           (leaf (token "4a" SPINE-DATA 9 0))
                                           (leaf (token "=3" MEASURE 10 0))
                                           (leaf (token "4a" SPINE-DATA 11 0))
                                           (leaf (token "4a" SPINE-DATA 12 0))
                                           (leaf (token "4a" SPINE-DATA 13 0))
                                           (leaf (token "4a" SPINE-DATA 14 0))
                                           (leaf (token "=4" MEASURE 15 0))
                                           (leaf (token "4a" SPINE-DATA 16 0))
                                           (leaf (token "4a" SPINE-DATA 17 0))
                                           (leaf (token "4a" SPINE-DATA 18 0))
                                           (leaf (token "4a" SPINE-DATA 19 0))
                                           (leaf (token "=5" MEASURE 20 0))
                                           (leaf (token "4a" SPINE-DATA 21 0))
                                           (leaf (token "4a" SPINE-DATA 22 0))
                                           (leaf (token "4a" SPINE-DATA 23 0))
                                           (leaf (token "4a" SPINE-DATA 24 0))
                                           (leaf (token "==" MEASURE 25 0))
                                           (leaf (token "*-" SPINE-TERMINATOR 26 0)))
                                     (list (leaf (token "**dynam" EXCLUSIVE-INTERPRETATION 0 1))
                                           (leaf (token "f" SPINE-DATA 1 1))
                                           (leaf (token ">" SPINE-DATA 2 1))
                                           (leaf (token ")" SPINE-DATA 3 1))
                                           (leaf (token ")" SPINE-DATA 4 1))
                                           (leaf (token "=2" MEASURE 5 1))
                                           (leaf (token "]" SPINE-DATA 6 1))
                                           (leaf (token "<" SPINE-DATA 7 1))
                                           (leaf (token "." NULL-SPINE-DATA 8 1))
                                           (leaf (token "." NULL-SPINE-DATA 9 1))
                                           (leaf (token "=3" MEASURE 10 1))
                                           (leaf (token "p" SPINE-DATA 11 1))
                                           (leaf (token "." NULL-SPINE-DATA 12 1))
                                           (leaf (token "<" SPINE-DATA 13 1))
                                           (leaf (token "[" SPINE-DATA 14 1))
                                           (leaf (token "=4" MEASURE 15 1))
                                           (leaf (token "." NULL-SPINE-DATA 16 1))
                                           (leaf (token ">" SPINE-DATA 17 1))
                                           (leaf (token "." NULL-SPINE-DATA 18 1))
                                           (leaf (token "." NULL-SPINE-DATA 19 1))
                                           (leaf (token "=5" MEASURE 20 1))
                                           (leaf (token "<" SPINE-DATA 21 1))
                                           (leaf (token "(" SPINE-DATA 22 1))
                                           (leaf (token "(" SPINE-DATA 23 1))
                                           (leaf (token "[" SPINE-DATA 24 1))
                                           (leaf (token "==" MEASURE 25 1))
                                           (leaf (token "*-" SPINE-TERMINATOR 26 1)))))))
(check-expect (autowedge parent-tree)
              (ab-hgraph (root (list (list (leaf (token "**kern" EXCLUSIVE-INTERPRETATION 0 0))
                                           (parent (token "*^" SPINE-SPLIT 1 0)
                                                   (list (leaf (token "4a" SPINE-DATA 2 0))
                                                         (leaf (token "*" NULL-INTERPRETATION 3 0))
                                                         (leaf (token "*v" SPINE-JOIN 4 0)))
                                                   (list (leaf (token "4aa" SPINE-DATA 2 1))
                                                         (leaf (token "*" NULL-INTERPRETATION 3 1))
                                                         (leaf (token "*v" SPINE-JOIN 4 1))))
                                           (leaf (token "==" MEASURE 5 0))
                                           (leaf (token "*-" SPINE-TERMINATOR 6 0)))
                                     (list (leaf (token "**dynam" EXCLUSIVE-INTERPRETATION 0 1))
                                           (parent (token "*^" SPINE-SPLIT 1 1)
                                                   (list (leaf (token "p" SPINE-DATA 2 1))
                                                         (leaf (token "*v" SPINE-JOIN 3 1)))
                                                   (list (leaf (token "pp" SPINE-DATA 2 2))
                                                         (leaf (token "*v" SPINE-JOIN 3 2))))
                                           (leaf (token "*" NULL-INTERPRETATION 4 1))
                                           (leaf (token "==" MEASURE 5 1))
                                           (leaf (token "*-" SPINE-TERMINATOR 6 1)))))))

(test)
